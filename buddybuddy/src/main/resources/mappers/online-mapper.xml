<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="onlineMapper">
	
	<!-- 파일 정보 조회용 resultMap -->
	<resultMap type="OnAttachment" id="attachment_rm">
		<id property="fileNo" column="FILE_NO" />

		<result property="filePath" column="FILE_PATH" />
		<result property="fileName" column="FILE_NM" />
		<result property="fileLevel" column="FILE_LEVEL" />
		<result property="classNo" column="CLASS_NO" />
	</resultMap>
	
	<!-- Pagination용 resultMap -->
	<resultMap type="OnPagination" id="pg_rm">
		<result property="listCount" column="CNT"/>
		<result property="className" column="CLASS_TYPE_NAME"/>
	</resultMap>
	
	<!-- 클래스 목록, 상세조회용 resultMap -->	
	<resultMap type="Online" id="online_rm">
		<id property="classNo" column="CLASS_NO"/>
	
		<result property="classTitle" column="CLASS_TITLE"/>
		<result property="memberNickName" column="MEMBER_NICKNAME"/>
		<result property="categoryName" column="CATEGORY_NAME"/>
		<result property="categoryNo" column="CATEGORY_NO"/>
		<result property="classType" column="CLASS_TYPE_NO"/>
		<result property="classReadCount" column="CLASS_READ_COUNT"/>
		<result property="classCreateDate" column="CLASS_CREATE_DT"/>
		
		<result property="classContent" column="CLASS_CONTENT"/>
		<result property="memberNo" column="MEMBER_NO"/>
		 
		<collection property="atList" column="CLASS_NO" 
			javaType="java.util.ArrayList" ofType="Attachment" select="selectAttachment"/>
	</resultMap>
	
	<!-- 카테고리 목록 resultMap -->
	<resultMap type="OnCategory" id="category_rm">
		<id property="categoryNo" column="CATEGORY_NO" />
		<result property="categoryName" column="CATEGORY_NAME" />
	</resultMap>
	
	
	<!-- ======================================================================== -->
	<!-- ======================================================================== -->
	<!-- ======================================================================== -->
	<!-- ======================================================================== -->
	
	<!-- 특정 클래스의 모든 이미지 정보 조회 -->
	<select id="selectAttachment" parameterType="_int" resultMap="attachment_rm">
		SELECT * FROM ATTACHMENT
		WHERE CLASS_NO = ${classNo}
		ORDER BY FILE_LEVEL
	</select>
	
	<!-- Individual 클래스 목록 조회 -->
	<select id="selectIndividualList" parameterType="_int" resultMap="online_rm">
		SELECT * FROM ONLINE_LIST
		WHERE CLASS_STATUS = 'Y'
		AND CLASS_TYPE_NO = #{classType}
		AND MEMBER_NO = #{memberNo}
		ORDER BY CLASS_NO DESC
	</select>
	
	<!-- Individual 클래스 목록 조회(검색) -->
	<select id="selectIndividualSearchList" parameterType="OnSearch" resultMap="online_rm">
		SELECT * FROM ONLINE_LIST
		WHERE CLASS_STATUS = 'Y'
		AND CLASS_TYPE_NO = #{classType}
		AND MEMBER_NO = #{memberNo}
		
		<if test="sv != null">
			AND

			<bind name="val" value="'%' + sv + '%'" />

			<choose>

				<when test="sk == 'all' ">
					( CLASS_TITLE LIKE #{val} OR CLASS_CONTENT LIKE #{val} OR MEMBER_NICKNAME LIKE #{val})
				</when>
				<when test="sk == 'title' ">
					CLASS_TITLE LIKE #{val}
				</when>
				<when test="sk == 'content' ">
					CLASS_CONTENT LIKE #{val}
				</when>
				<when test="sk == 'titcont' ">
					( CLASS_TITLE LIKE #{val} OR CLASS_CONTENT LIKE #{val} )
				</when>
				<when test="sk == 'creater' ">
					MEMBER_NICKNAME LIKE #{val}
				</when>

			</choose>
		</if>
		
		<!-- 카테고리 조건으로 추가되어 있는 경우 -->
		<if test="ct != null">
			AND CATEGORY_NO IN

			<foreach collection="ct" item="code" open="(" close=")"
				separator=",">
				#{code}
			</foreach>

		</if>
		
		ORDER BY CLASS_NO DESC
	</select>
	
	<!-- 특정 클래스 individual 클래스 수 + 클래스 이름 조회 -->
	<select id="getIndiListCount" parameterType="_int" resultMap="pg_rm">
		SELECT
		CNT, (SELECT CLASS_TYPE_NAME FROM CLASS_TYPE WHERE CLASS_TYPE_NO = #{classType}) CLASS_TYPE_NAME
		FROM (SELECT COUNT(*) CNT
		FROM ONLINE_LIST
		WHERE CLASS_TYPE_NO = #{classType} AND CLASS_STATUS = 'Y' AND MEMBER_NO = #{memberNo})
	</select>
	
	<!-- 특정 클래스 individual 검색 클래스 수 + 클래스 이름 조회 -->
	<select id="getIndiSearchListCount" parameterType="OnSearch" resultMap="pg_rm">
		SELECT
		CNT, (SELECT CLASS_TYPE_NAME FROM CLASS_TYPE WHERE CLASS_TYPE_NO = #{classType}) CLASS_TYPE_NAME
		FROM (SELECT COUNT(*) CNT
		FROM ONLINE_LIST
		WHERE CLASS_TYPE_NO = #{classType} AND CLASS_STATUS = 'Y' AND MEMBER_NO = #{memberNo}
		
		<if test="sv != null">
			AND

			<bind name="val" value="'%' + sv + '%'" />

			<choose>
			
				<when test="sk == 'all' ">
					( CLASS_TITLE LIKE #{val} OR CLASS_CONTENT LIKE #{val} OR MEMBER_NICKNAME LIKE #{val})
				</when>
				<when test="sk == 'title' ">
					CLASS_TITLE LIKE #{val}
				</when>
				<when test="sk == 'content' ">
					CLASS_CONTENT LIKE #{val}
				</when>
				<when test="sk == 'titcont' ">
					( CLASS_TITLE LIKE #{val} OR CLASS_CONTENT LIKE #{val} )
				</when>
				<when test="sk == 'creater' ">
					MEMBER_NICKNAME LIKE #{val}
				</when>

			</choose>
		</if>

		<!-- 카테고리 조건으로 추가되어 있는 경우 -->
		<if test="ct != null">
			AND CATEGORY_NO IN

			<foreach collection="ct" item="code" open="(" close=")"
				separator=",">
				#{code}
			</foreach>

		</if>
		
		)
	</select>
	
	
	
	
	<!-- ====================================== -->
	<!-- 온라인 클래스 목록 조회 -->
	<select id="selectOnlineList" parameterType="_int" resultMap="online_rm">
		SELECT * FROM ONLINE_LIST
		WHERE CLASS_STATUS = 'Y'
		AND CLASS_TYPE_NO = #{classType}
		ORDER BY CLASS_NO DESC
	</select>
	
	<!-- 온라인 클래스 목록 조회(검색) -->
	<select id="selectSearchList" parameterType="OnSearch" resultMap="online_rm">
		SELECT * FROM ONLINE_LIST
		WHERE CLASS_STATUS = 'Y'
		AND CLASS_TYPE_NO = #{classType}
		
		<if test="sv != null">
			AND

			<bind name="val" value="'%' + sv + '%'" />

			<choose>

				<when test="sk == 'all' ">
					( CLASS_TITLE LIKE #{val} OR CLASS_CONTENT LIKE #{val} OR MEMBER_NICKNAME LIKE #{val})
				</when>
				<when test="sk == 'title' ">
					CLASS_TITLE LIKE #{val}
				</when>
				<when test="sk == 'content' ">
					CLASS_CONTENT LIKE #{val}
				</when>
				<when test="sk == 'titcont' ">
					( CLASS_TITLE LIKE #{val} OR CLASS_CONTENT LIKE #{val} )
				</when>
				<when test="sk == 'creater' ">
					MEMBER_NICKNAME LIKE #{val}
				</when>

			</choose>
		</if>
		
		<!-- 카테고리 조건으로 추가되어 있는 경우 -->
		<if test="ct != null">
			AND CATEGORY_NO IN

			<foreach collection="ct" item="code" open="(" close=")"
				separator=",">
				#{code}
			</foreach>

		</if>
		
		ORDER BY CLASS_NO DESC
	</select>
	
	
	<!-- 특정 클래스 전체 클래스 수 + 클래스 이름 조회 -->
	<select id="getListCount" parameterType="_int" resultMap="pg_rm">
		SELECT
		CNT, (SELECT CLASS_TYPE_NAME FROM CLASS_TYPE WHERE CLASS_TYPE_NO = #{classType}) CLASS_TYPE_NAME
		FROM (SELECT COUNT(*) CNT
		FROM ONLINE_LIST
		WHERE CLASS_TYPE_NO = #{classType} AND CLASS_STATUS = 'Y')
	</select>
	
	<!-- 특정 클래스 검색 클래스 수 + 클래스 이름 조회 -->
	<select id="getSearchListCount" parameterType="OnSearch" resultMap="pg_rm">
		SELECT
		CNT, (SELECT CLASS_TYPE_NAME FROM CLASS_TYPE WHERE CLASS_TYPE_NO = #{classType}) CLASS_TYPE_NAME
		FROM (SELECT COUNT(*) CNT
		FROM ONLINE_LIST
		WHERE CLASS_TYPE_NO = #{classType} AND CLASS_STATUS = 'Y'
		
		<if test="sv != null">
			AND

			<bind name="val" value="'%' + sv + '%'" />

			<choose>
			
				<when test="sk == 'all' ">
					( CLASS_TITLE LIKE #{val} OR CLASS_CONTENT LIKE #{val} OR MEMBER_NICKNAME LIKE #{val})
				</when>
				<when test="sk == 'title' ">
					CLASS_TITLE LIKE #{val}
				</when>
				<when test="sk == 'content' ">
					CLASS_CONTENT LIKE #{val}
				</when>
				<when test="sk == 'titcont' ">
					( CLASS_TITLE LIKE #{val} OR CLASS_CONTENT LIKE #{val} )
				</when>
				<when test="sk == 'creater' ">
					MEMBER_NICKNAME LIKE #{val}
				</when>

			</choose>
		</if>

		<!-- 카테고리 조건으로 추가되어 있는 경우 -->
		<if test="ct != null">
			AND CATEGORY_NO IN

			<foreach collection="ct" item="code" open="(" close=")"
				separator=",">
				#{code}
			</foreach>

		</if>
		
		)
	</select>

	
	<!-- 조회 수 증가 -->
	<update id="increaseReadCount" parameterType="_int">
		UPDATE CLASS_PAGE SET
		CLASS_READ_COUNT = CLASS_READ_COUNT + 1
		WHERE CLASS_NO = #{classNo}
	</update>
	
	<!-- 카테고리 목록 조회 -->
	<select id="selectCategory" resultMap="category_rm">
		SELECT * FROM CATEGORY
	</select>
	
	<!-- 클래스 상세 조회 + 해당 클래스에 첨부된 이미지 및 동영상 목록 조회 -->
	<select id="selectOnline" parameterType="_int" resultMap="online_rm">
		SELECT CLASS_NO, CATEGORY_NAME, CATEGORY_NO, CLASS_TITLE, CLASS_CONTENT,
		MEMBER_NO, MEMBER_NICKNAME, CLASS_READ_COUNT, CLASS_CREATE_DT, CLASS_TYPE_NO
		FROM CLASS_PAGE
		JOIN CATEGORY USING(CATEGORY_NO)
		JOIN MEMBER USING(MEMBER_NO)
		WHERE CLASS_NO = #{classNo}
		AND CLASS_STATUS = 'Y'
	</select>
	
	<!-- 클래스 삽입 -->
	<insert id="insertOnlineClass" parameterType="Online"
		useGeneratedKeys="true">

		<selectKey keyProperty="classNo" resultType="_int"
			order="BEFORE">
			SELECT SEQ_CLASSNO.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO CLASS_PAGE VALUES
		( #{classNo}, #{classTitle}, #{classContent}, 
		DEFAULT, DEFAULT, DEFAULT, #{memberNo}, #{classType}, #{categoryNo}, null )
		
	</insert>

	<!-- 파일 정보 삽입(List) -->
	<insert id="insertAttachmentList" parameterType="list">
		INSERT INTO ATTACHMENT
		SELECT SEQ_FNO.NEXTVAL, A.* FROM (
		<foreach collection="list" item="at" separator="UNION ALL">
			SELECT #{at.filePath} FILE_PATH,
			#{at.fileName} FILE_NAME,
			#{at.fileLevel} FILE_LEVEL,
			#{at.classNo} CLASS_NO FROM DUAL
		</foreach>
		) A

	</insert>
	
	
	
	<!-- 클래스 삽입 (썸머 테스트) -->
	
	<insert id="insertOnline" parameterType="Online" useGeneratedKeys="true">
	
		<selectKey keyProperty="classNo" resultType="_int"
			order="BEFORE">
			SELECT SEQ_CLASSNO.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO CLASS_PAGE VALUES
		( #{classNo}, #{classTitle}, #{classContent}, 
		DEFAULT, DEFAULT, DEFAULT, #{memberNo}, #{classType}, #{categoryNo}, null )
		
	</insert>
	
	<!-- 클래스 수정 (썸머 테스트) -->
	<update id="summerUpdateOnline" parameterType="Online">
		UPDATE CLASS_PAGE SET CLASS_TITLE = #{classTitle}, CLASS_CONTENT = #{classContent}, CATEGORY_NO = #{categoryNo}
		WHERE CLASS_NO = #{classNo}
	</update>
	
	<!-- 클래스 삭제 (썸머 테스트) -->
	<update id="summerDeleteOnline" parameterType="_int">
		UPDATE CLASS_PAGE SET
		CLASS_STATUS = 'N'
		WHERE CLASS_NO = #{classNo}
	</update>
	
	
</mapper>
