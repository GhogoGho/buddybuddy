<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="offlineMapper">
	<!-- Pagination용 resultMap -->
	<resultMap type="OffPage" id="pg_rm">
		<result property="listCount" column="CNT" />
	</resultMap>
	<!-- 오프라인 전체 게시글 조회 -->
	<select id="getPagination" parameterType="_int"
		resultMap="pg_rm">
		SELECT COUNT(*) CNT FROM CLASS_PAGE WHERE CLASS_TYPE_NO =
		#{classType}
	</select>
	<!-- 오프라인 검색 게시글 조회 -->
	<select id="getSearchPagination" parameterType="OffSearch"
		resultMap="pg_rm">
		SELECT COUNT(*) CNT FROM CLASS_PAGE WHERE CLASS_TYPE_NO = #{classType}

		<if test="sv != null">
			AND

			<bind name="val" value="'%' + sv + '%'" />

			<choose>

				<when test="sk == 'title' ">
					CLASS_TITLE LIKE #{val}
				</when>
				<when test="sk == 'content' ">
					CLASS_CONTENT LIKE #{val}
				</when>
				<when test="sk == 'titcont' ">
					( CLASS_TITLE LIKE #{val} OR CLASS_CONTENT LIKE
					#{val} )
				</when>
				<when test="sk == 'creater' ">
					MEMBER_NICKNAME LIKE #{val}
				</when>

			</choose>
		</if>
	</select>
	<!-- offMain 조회용 -->
	<resultMap type="OfflineClass" id="offMain_rm">
		<id property="classNo" column="CLASS_NO" />

		<result property="classTitle" column="CLASS_TITLE" />
		<result property="classContent" column="CLASS_CONTENT" />
		<result property="classCreateDate" column="CLASS_CREATE_DT" />
		<result property="classReadCount" column="CLASS_READ_COUNT" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="reviewRatings" column="REVIEW_RATINGS" />
		<result property="memberNickName" column="MEMBER_NICKNAME" />
		<result property="categoryName" column="CATEGORY_NAME" />
		<result property="memberProfile" column="MEMBER_PROFILE" />
		<result property="reserveDate" column="RESERVE_DATE" />
		<result property="reserveStart" column="RESERVE_START" />
		<result property="reserveEnd" column="RESERVE_END" />
		<result property="reserveLimit" column="RESERVE_LIMIT" />
		<result property="classLevel" column="CLASS_LEVEL" />
		<result property="classArea" column="CLASS_AREA" />
		<result property="paymentStatus" column="PAYMENT_STATUS" />
		<result property="classPrice" column="CLASS_PRICE" />
		<result property="reserveDate" column="RESERVE_DT" />
		<result property="count" column="XXX" />
		<result property="reserveNo" column="RESERVE_NO" />
		<collection property="atList" column="CLASS_NO"
			javaType="java.util.ArrayList" ofType="OffAttachment"
			select="selectAttachment" />
	</resultMap>
	<!-- AJAX 조회용 -->
	<resultMap type="OfflineClass" id="offajax_rm">
		<id property="classNo" column="CLASS_NO" />

		<result property="classTitle" column="CLASS_TITLE" />
		<result property="classContent" column="CLASS_CONTENT" />
		<result property="classCreateDate" column="CLASS_CREATE_DT" />
		<result property="classReadCount" column="CLASS_READ_COUNT" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="reviewRatings" column="REVIEW_RATINGS" />
		<result property="memberNickName" column="MEMBER_NICKNAME" />
		<result property="categoryName" column="CATEGORY_NAME" />
		<result property="categoryCode" column="CATEGORY_NO" />
		<result property="memberProfile" column="MEMBER_PROFILE" />
		<result property="reserveDate" column="RESERVE_DATE" />
		<result property="reserveStart" column="RESERVE_START" />
		<result property="reserveEnd" column="RESERVE_END" />
		<result property="reserveLimit" column="RESERVE_LIMIT" />
		<result property="classLevel" column="CLASS_LEVEL" />
		<result property="classArea" column="CLASS_AREA" />
		<result property="paymentStatus" column="PAYMENT_STATUS" />
		<result property="classPrice" column="CLASS_PRICE" />
		<result property="reserveDate" column="RESERVE_DT" />
		<result property="count" column="XXX" />
		<result property="reserveNo" column="RESERVE_NO" />
	</resultMap>
	<!-- 파일 정보 조회용 resultMap -->
	<resultMap type="OffAttachment" id="attachment_rm">
		<id property="fileNo" column="FILE_NO" />

		<result property="filePath" column="FILE_PATH" />
		<result property="fileName" column="FILE_NM" />
		<result property="fileLevel" column="FILE_LEVEL" />
		<result property="classNo" column="CLASS_NO" />
		<result property="count" column="COUNT(*)" />
	</resultMap>
	<!--게시글 목록 섬네일 조회 -->
	<select id="selectAttachment" parameterType="_int"
		resultMap="attachment_rm">
		SELECT * FROM ATTACHMENT
		WHERE CLASS_NO = ${classNo}
		ORDER BY
		FILE_LEVEL
	</select>
	<!-- 게시글목록조회 -->
	<select id="selectOfflinList" parameterType="OffPage"
		resultMap="offMain_rm">
		SELECT CLASS_NO,CATEGORY_NAME, CLASS_TITLE FROM
		CLASS_PAGE
		LEFT JOIN CATEGORY USING(CATEGORY_NO)
		WHERE CLASS_TYPE_NO =#{classType}
		AND CLASS_STATUS = 'Y'
		ORDER BY CLASS_NO DESC
	</select>
	<!-- 게시글목록조회(검색) -->
	<select id="selectOfflinSearchList" parameterType="OffSearch"
		resultMap="offMain_rm">
		SELECT CLASS_NO,CATEGORY_NAME, CLASS_TITLE FROM
		CLASS_PAGE
		LEFT JOIN
		CATEGORY USING(CATEGORY_NO)
		WHERE CLASS_TYPE_NO =#{classType}

		<if test="sv != null">
			AND

			<bind name="val" value="'%' + sv + '%'" />

			<choose>

				<when test="sk == 'title' ">
					CLASS_TITLE LIKE #{val}
				</when>
				<when test="sk == 'content' ">
					CLASS_CONTENT LIKE #{val}
				</when>
				<when test="sk == 'titcont' ">
					( CLASS_TITLE LIKE #{val} OR CLASS_CONTENT LIKE
					#{val} )
				</when>
				<when test="sk == 'creater' ">
					MEMBER_NICKNAME LIKE #{val}
				</when>

			</choose>
		</if>
		AND CLASS_STATUS = 'Y'
		ORDER BY CLASS_NO DESC
	</select>
	<!-- 상세조회 -->
	<select id="selectOfflinView" parameterType="OfflineClass"
		resultMap="offMain_rm">
		<!-- SELECT CLASS_NO,CLASS_CONTENT,CLASS_AREA,CATEGORY_NAME,CLASS_TITLE, 
			MEMBER_PROFILE,MEMBER_NICKNAME,CLASS_PRICE,CLASS_LEVEL,RESERVE_END, RESERVE_START,RESERVE_LIMIT 
			FROM CLASS_PAGE LEFT JOIN MEMBER USING(MEMBER_NO) LEFT JOIN CATEGORY USING(CATEGORY_NO) 
			LEFT JOIN RESERVE USING(CLASS_NO) LEFT JOIN PAYMENT USING(CLASS_NO) WHERE 
			CLASS_NO = #{classNo} -->
		<!-- SELECT CLASS_NO,CLASS_CONTENT,CATEGORY_NAME,CLASS_TITLE, MEMBER_PROFILE,MEMBER_NICKNAME,CLASS_PRICE 
			FROM CLASS_PAGE LEFT JOIN MEMBER USING(MEMBER_NO) LEFT JOIN CATEGORY USING(CATEGORY_NO) 
			LEFT JOIN PAYMENT USING(CLASS_NO) WHERE CLASS_NO = #{classNo} -->
		SELECT DISTINCT CLASS_NO,CLASS_AREA,CATEGORY_NAME,CLASS_TITLE,
		MEMBER_PROFILE,MEMBER_NICKNAME,CLASS_PRICE,CLASS_LEVEL,
		RESERVE_LIMIT
		FROM CLASS_PAGE
		LEFT JOIN MEMBER USING(MEMBER_NO)
		LEFT JOIN CATEGORY
		USING(CATEGORY_NO)
		LEFT JOIN RESERVE USING(CLASS_NO)
		LEFT JOIN PAYMENT
		USING(CLASS_NO)
		WHERE CLASS_NO = #{classNo}
	</select>
	<!--컨텐트조회 -->
	<select id="selectContent" parameterType="_int"
		resultMap="offMain_rm">
		SELECT CLASS_CONTENT ,MEMBER_NO FROM CLASS_PAGE WHERE CLASS_NO =
		#{classNo}
	</select>
	<!-- 예약글 목록 조회 -->
	<select id="reserveSelectList" parameterType="OfflineClass"
		resultMap="offajax_rm">
		SELECT RESERVE_START,RESERVE_END, (SELECT COUNT(*) FROM
		CONFIRM_RESERVE B WHERE B.RESERVE_NO = A.RESERVE_NO) XXX
		FROM RESERVE A
		WHERE CLASS_NO = #{classNo}
		AND RESERVE_DT = #{reserveDate}
		AND RESERVE_STATUS= 'Y'
	</select>
	<!-- 클래스 삽입 -->
	<insert id="insertOfflineClass" parameterType="OfflineClass"
		useGeneratedKeys="true">
		<selectKey keyProperty="classNo" resultType="_int"
			order="BEFORE">
			SELECT SEQ_CLASSNO.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO CLASS_PAGE VALUES
		(#{classNo},#{classTitle},#{classContent},DEFAULT,DEFAULT,DEFAULT,#{memberNo},#{classType},#{categoryCode},#{classPrice})
	</insert>
	
	<!--예약날짜 삽입  -->
	<insert id="insertReserveAll" parameterType="OfflineClass">
		INSERT INTO RESERVE VALUES(SEQ_RESERVE.NEXTVAL,#{reserveDate},#{reserveStart},#{reserveEnd},#{reserveLimit},#{classLevel},#{classArea},#{memberNo},#{classNo},DEFAULT)
	</insert>
	<!-- 사진 삽입 -->
		<insert id="insertAttachmentList" parameterType="list">
		INSERT INTO ATTACHMENT
		SELECT SEQ_FNO.NEXTVAL, A.* FROM (

		<foreach collection="list" item="at" separator="UNION ALL">
			SELECT #{at.filePath} FILE_PATH,
			#{at.fileName} FILE_NAME,
			#{at.fileLevel} FILE_LEVEL,
			#{at.classNo} CLASS_NO FROM DUAL
		</foreach>
		) A

	</insert>
	
	
	<!-- 예약번호 조회 -->
	<select id="selectReserveMemberNo" parameterType="OfflineClass" resultMap="offajax_rm">
		SELECT * FROM RESERVE WHERE CLASS_NO =#{classNo} AND RESERVE_START =#{reserveStart} AND RESERVE_END=#{reserveEnd} AND RESERVE_DT=#{reserveDate}
	</select>
	<!-- 예약자 삽입 -->
	<insert id="reserveInsert" parameterType="OfflineClass">
		INSERT INTO CONFIRM_RESERVE VALUES(SEQ_CONFIRM.NEXTVAL,DEFAULT,#{memberNo},#{classNo},#{reserveNo})
	</insert>
	<!-- 클래스 삭제 -->
	<update id="deleteClass" parameterType="_int">
		UPDATE CLASS_PAGE SET CLASS_STATUS = 'N' WHERE CLASS_NO=#{classNo}
	</update>
	<!-- 예약 삭제 -->
	<update id="deleteReserve" parameterType="_int">
		UPDATE RESERVE SET RESERVE_STATUS = 'N' WHERE CLASS_NO=#{classNo}
	</update>
	<!-- 예약자 삭제 -->
	<update id="deleteConfirmReserve" parameterType="_int">
		UPDATE CONFIRM_RESERVE SET RESERVE_STATUS = 'N' WHERE CLASS_NO=#{classNo}
	</update>
	
	<resultMap type="OffCategory" id="category_rm">
		<id property="categoryNo" column="CATEGORY_NO"/>
		<result property="categoryName" column="CATEGORY_NAME"/>
	</resultMap>
	
	<!-- 카테고리 조회 -->
	<select id="selectCategory" resultMap="category_rm">
		SELECT * FROM CATEGORY
	</select>
</mapper>
